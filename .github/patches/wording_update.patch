diff --git a/.github/workflows/builder.yml b/.github/workflows/builder.yml
index e359ed59cf..d1d9c85cb9 100644
--- a/.github/workflows/builder.yml
+++ b/.github/workflows/builder.yml
@@ -18,7 +18,7 @@ env:
 jobs:
   init:
     name: Initialize build
-    if: github.repository_owner == 'home-assistant'
+    # if: github.repository_owner == 'home-assistant'
     runs-on: ubuntu-latest
     outputs:
       architectures: ${{ steps.info.outputs.architectures }}
@@ -51,18 +51,18 @@ jobs:
         with:
           ignore-dev: true
 
-      - name: Fail if translations files are checked in
-        run: |
-          if [ -n "$(find homeassistant/components/*/translations -type f)" ]; then
-              echo "Translations files are checked in, please remove the following files:"
-              find homeassistant/components/*/translations -type f
-              exit 1
-          fi
+      # - name: Fail if translations files are checked in
+      #   run: |
+      #     if [ -n "$(find homeassistant/components/*/translations -type f)" ]; then
+      #         echo "Translations files are checked in, please remove the following files:"
+      #         find homeassistant/components/*/translations -type f
+      #         exit 1
+      #     fi
 
-      - name: Download Translations
-        run: python3 -m script.translations download
-        env:
-          LOKALISE_TOKEN: ${{ secrets.LOKALISE_TOKEN }}
+      # - name: Download Translations
+      #   run: python3 -m script.translations download
+      #   env:
+      #     LOKALISE_TOKEN: ${{ secrets.LOKALISE_TOKEN }}
 
       - name: Archive translations
         shell: bash
@@ -77,7 +77,7 @@ jobs:
 
   build_base:
     name: Build ${{ matrix.arch }} base core image
-    if: github.repository_owner == 'home-assistant'
+    # if: github.repository_owner == 'home-assistant'
     needs: init
     runs-on: ubuntu-latest
     permissions:
@@ -97,7 +97,7 @@ jobs:
         uses: dawidd6/action-download-artifact@v6
         with:
           github_token: ${{secrets.GITHUB_TOKEN}}
-          repo: home-assistant/frontend
+          repo: my-smart-homes/frontend-ha
           branch: dev
           workflow: nightly.yaml
           workflow_conclusion: success
@@ -131,17 +131,17 @@ jobs:
           uv pip install .
           python3 script/version_bump.py nightly --set-nightly-version "${{ needs.init.outputs.version }}"
 
-          if [[ "$(ls home_assistant_frontend*.whl)" =~ ^home_assistant_frontend-(.*)-py3-none-any.whl$ ]]; then
+          if [[ "$(ls my_smart_homes_frontend*.whl)" =~ ^my_smart_homes_frontend-(.*)-py3-none-any.whl$ ]]; then
             echo "Found frontend wheel, setting version to: ${BASH_REMATCH[1]}"
             frontend_version="${BASH_REMATCH[1]}" yq \
               --inplace e -o json \
-              '.requirements = ["home-assistant-frontend=="+env(frontend_version)]' \
+              '.requirements = ["my_smart_homes_frontend=="+env(frontend_version)]' \
               homeassistant/components/frontend/manifest.json
 
-            sed -i "s|home-assistant-frontend==.*|home-assistant-frontend==${BASH_REMATCH[1]}|" \
+            sed -i "s|my_smart_homes_frontend==.*|my_smart_homes_frontend==${BASH_REMATCH[1]}|" \
               homeassistant/package_constraints.txt
 
-            sed -i "s|home-assistant-frontend==.*||" requirements_all.txt
+            sed -i "s|my_smart_homes_frontend==.*||" requirements_all.txt
           fi
 
           if [[ "$(ls home_assistant_intents*.whl)" =~ ^home_assistant_intents-(.*)-py3-none-any.whl$ ]]; then
@@ -197,18 +197,17 @@ jobs:
           password: ${{ secrets.GITHUB_TOKEN }}
 
       - name: Build base image
-        uses: home-assistant/builder@2024.08.2
+        uses: my-smart-homes/builder@master
         with:
           args: |
             $BUILD_ARGS \
             --${{ matrix.arch }} \
-            --cosign \
             --target /data \
             --generic ${{ needs.init.outputs.version }}
 
   build_machine:
     name: Build ${{ matrix.machine }} machine core image
-    if: github.repository_owner == 'home-assistant'
+    # if: github.repository_owner == 'home-assistant'
     needs: ["init", "build_base"]
     runs-on: ubuntu-latest
     permissions:
@@ -219,27 +218,27 @@ jobs:
       matrix:
         machine:
           - generic-x86-64
-          - intel-nuc
-          - khadas-vim3
-          - odroid-c2
-          - odroid-c4
-          - odroid-m1
-          - odroid-n2
-          - odroid-xu
+          # - intel-nuc
+          # - khadas-vim3
+          # - odroid-c2
+          # - odroid-c4
+          # - odroid-m1
+          # - odroid-n2
+          # - odroid-xu
           - qemuarm
           - qemuarm-64
           - qemux86
           - qemux86-64
-          - raspberrypi
-          - raspberrypi2
-          - raspberrypi3
-          - raspberrypi3-64
-          - raspberrypi4
-          - raspberrypi4-64
-          - raspberrypi5-64
-          - tinker
-          - yellow
-          - green
+          # - raspberrypi
+          # - raspberrypi2
+          # - raspberrypi3
+          # - raspberrypi3-64
+          # - raspberrypi4
+          # - raspberrypi4-64
+          # - raspberrypi5-64
+          # - tinker
+          # - yellow
+          # - green
     steps:
       - name: Checkout the repository
         uses: actions/checkout@v4.2.2
@@ -263,12 +262,11 @@ jobs:
           password: ${{ secrets.GITHUB_TOKEN }}
 
       - name: Build base image
-        uses: home-assistant/builder@2024.08.2
+        uses: my-smart-homes/builder@master
         with:
           args: |
             $BUILD_ARGS \
             --target /data/machine \
-            --cosign \
             --machine "${{ needs.init.outputs.version }}=${{ matrix.machine }}"
 
   publish_ha:
@@ -289,7 +287,7 @@ jobs:
           token: ${{ secrets.GIT_TOKEN }}
 
       - name: Update version file
-        uses: home-assistant/actions/helpers/version-push@master
+        uses: my-smart-homes/actions/helpers/version-push@master
         with:
           key: "homeassistant[]"
           key-description: "Home Assistant Core"
@@ -298,7 +296,7 @@ jobs:
 
       - name: Update version file (stable -> beta)
         if: needs.init.outputs.channel == 'stable'
-        uses: home-assistant/actions/helpers/version-push@master
+        uses: my-smart-homes/actions/helpers/version-push@master
         with:
           key: "homeassistant[]"
           key-description: "Home Assistant Core"
@@ -308,7 +306,7 @@ jobs:
   publish_container:
     name: Publish meta container for ${{ matrix.registry }}
     environment: ${{ needs.init.outputs.channel }}
-    if: github.repository_owner == 'home-assistant'
+    # if: github.repository_owner == 'home-assistant'
     needs: ["init", "build_base"]
     runs-on: ubuntu-latest
     permissions:
@@ -318,143 +316,144 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        registry: ["ghcr.io/home-assistant", "docker.io/homeassistant"]
+        # registry: ["ghcr.io/my-smart-homes", "docker.io/homeassistant"]
+        registry: ["ghcr.io/my-smart-homes"]
     steps:
       - name: Checkout the repository
         uses: actions/checkout@v4.2.2
 
-      - name: Install Cosign
-        uses: sigstore/cosign-installer@v3.7.0
-        with:
-          cosign-release: "v2.2.3"
+      # - name: Install Cosign
+      #   uses: sigstore/cosign-installer@v3.6.0
+      #   with:
+      #     cosign-release: "v2.2.3"
 
-      - name: Login to DockerHub
-        if: matrix.registry == 'docker.io/homeassistant'
-        uses: docker/login-action@v3.3.0
-        with:
-          username: ${{ secrets.DOCKERHUB_USERNAME }}
-          password: ${{ secrets.DOCKERHUB_TOKEN }}
+      # - name: Login to DockerHub
+      #   if: matrix.registry == 'docker.io/homeassistant'
+      #   uses: docker/login-action@v3.3.0
+      #   with:
+      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
+      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
 
       - name: Login to GitHub Container Registry
-        if: matrix.registry == 'ghcr.io/home-assistant'
+        if: matrix.registry == 'ghcr.io/my-smart-homes'
         uses: docker/login-action@v3.3.0
         with:
           registry: ghcr.io
           username: ${{ github.repository_owner }}
           password: ${{ secrets.GITHUB_TOKEN }}
 
-      - name: Build Meta Image
-        shell: bash
-        run: |
-          export DOCKER_CLI_EXPERIMENTAL=enabled
-
-          function create_manifest() {
-            local tag_l=${1}
-            local tag_r=${2}
-            local registry=${{ matrix.registry }}
-
-            docker manifest create "${registry}/home-assistant:${tag_l}" \
-              "${registry}/amd64-homeassistant:${tag_r}" \
-              "${registry}/i386-homeassistant:${tag_r}" \
-              "${registry}/armhf-homeassistant:${tag_r}" \
-              "${registry}/armv7-homeassistant:${tag_r}" \
-              "${registry}/aarch64-homeassistant:${tag_r}"
-
-            docker manifest annotate "${registry}/home-assistant:${tag_l}" \
-              "${registry}/amd64-homeassistant:${tag_r}" \
-              --os linux --arch amd64
-
-            docker manifest annotate "${registry}/home-assistant:${tag_l}" \
-              "${registry}/i386-homeassistant:${tag_r}" \
-              --os linux --arch 386
-
-            docker manifest annotate "${registry}/home-assistant:${tag_l}" \
-              "${registry}/armhf-homeassistant:${tag_r}" \
-              --os linux --arch arm --variant=v6
-
-            docker manifest annotate "${registry}/home-assistant:${tag_l}" \
-              "${registry}/armv7-homeassistant:${tag_r}" \
-              --os linux --arch arm --variant=v7
-
-            docker manifest annotate "${registry}/home-assistant:${tag_l}" \
-              "${registry}/aarch64-homeassistant:${tag_r}" \
-              --os linux --arch arm64 --variant=v8
-
-            docker manifest push --purge "${registry}/home-assistant:${tag_l}"
-            cosign sign --yes "${registry}/home-assistant:${tag_l}"
-          }
-
-          function validate_image() {
-            local image=${1}
-            if ! cosign verify --certificate-oidc-issuer https://token.actions.githubusercontent.com --certificate-identity-regexp https://github.com/home-assistant/core/.* "${image}"; then
-              echo "Invalid signature!"
-              exit 1
-            fi
-          }
-
-          function push_dockerhub() {
-            local image=${1}
-            local tag=${2}
-
-            docker tag "ghcr.io/home-assistant/${image}:${tag}" "docker.io/homeassistant/${image}:${tag}"
-            docker push "docker.io/homeassistant/${image}:${tag}"
-            cosign sign --yes "docker.io/homeassistant/${image}:${tag}"
-          }
-
-          # Pull images from github container registry and verify signature
-          docker pull "ghcr.io/home-assistant/amd64-homeassistant:${{ needs.init.outputs.version }}"
-          docker pull "ghcr.io/home-assistant/i386-homeassistant:${{ needs.init.outputs.version }}"
-          docker pull "ghcr.io/home-assistant/armhf-homeassistant:${{ needs.init.outputs.version }}"
-          docker pull "ghcr.io/home-assistant/armv7-homeassistant:${{ needs.init.outputs.version }}"
-          docker pull "ghcr.io/home-assistant/aarch64-homeassistant:${{ needs.init.outputs.version }}"
-
-          validate_image "ghcr.io/home-assistant/amd64-homeassistant:${{ needs.init.outputs.version }}"
-          validate_image "ghcr.io/home-assistant/i386-homeassistant:${{ needs.init.outputs.version }}"
-          validate_image "ghcr.io/home-assistant/armhf-homeassistant:${{ needs.init.outputs.version }}"
-          validate_image "ghcr.io/home-assistant/armv7-homeassistant:${{ needs.init.outputs.version }}"
-          validate_image "ghcr.io/home-assistant/aarch64-homeassistant:${{ needs.init.outputs.version }}"
-
-          if [[ "${{ matrix.registry }}" ==  "docker.io/homeassistant" ]]; then
-            # Upload images to dockerhub
-            push_dockerhub "amd64-homeassistant" "${{ needs.init.outputs.version }}"
-            push_dockerhub "i386-homeassistant" "${{ needs.init.outputs.version }}"
-            push_dockerhub "armhf-homeassistant" "${{ needs.init.outputs.version }}"
-            push_dockerhub "armv7-homeassistant" "${{ needs.init.outputs.version }}"
-            push_dockerhub "aarch64-homeassistant" "${{ needs.init.outputs.version }}"
-          fi
-
-          # Create version tag
-          create_manifest "${{ needs.init.outputs.version }}" "${{ needs.init.outputs.version }}"
-
-          # Create general tags
-          if [[ "${{ needs.init.outputs.version }}" =~ d ]]; then
-            create_manifest "dev" "${{ needs.init.outputs.version }}"
-          elif [[ "${{ needs.init.outputs.version }}" =~ b ]]; then
-            create_manifest "beta" "${{ needs.init.outputs.version }}"
-            create_manifest "rc" "${{ needs.init.outputs.version }}"
-          else
-            create_manifest "stable" "${{ needs.init.outputs.version }}"
-            create_manifest "latest" "${{ needs.init.outputs.version }}"
-            create_manifest "beta" "${{ needs.init.outputs.version }}"
-            create_manifest "rc" "${{ needs.init.outputs.version }}"
-
-            # Create series version tag (e.g. 2021.6)
-            v="${{ needs.init.outputs.version }}"
-            create_manifest "${v%.*}" "${{ needs.init.outputs.version }}"
-          fi
+      # - name: Build Meta Image
+      #   shell: bash
+      #   run: |
+      #     export DOCKER_CLI_EXPERIMENTAL=enabled
+
+      #     function create_manifest() {
+      #       local tag_l=${1}
+      #       local tag_r=${2}
+      #       local registry=${{ matrix.registry }}
+
+      #       docker manifest create "${registry}/my-smart-homes:${tag_l}" \
+      #         "${registry}/amd64-homeassistant:${tag_r}" \
+      #         "${registry}/i386-homeassistant:${tag_r}" \
+      #         "${registry}/armhf-homeassistant:${tag_r}" \
+      #         "${registry}/armv7-homeassistant:${tag_r}" \
+      #         "${registry}/aarch64-homeassistant:${tag_r}"
+
+      #       docker manifest annotate "${registry}/my-smart-homes:${tag_l}" \
+      #         "${registry}/amd64-homeassistant:${tag_r}" \
+      #         --os linux --arch amd64
+
+      #       docker manifest annotate "${registry}/my-smart-homes:${tag_l}" \
+      #         "${registry}/i386-homeassistant:${tag_r}" \
+      #         --os linux --arch 386
+
+      #       docker manifest annotate "${registry}/my-smart-homes:${tag_l}" \
+      #         "${registry}/armhf-homeassistant:${tag_r}" \
+      #         --os linux --arch arm --variant=v6
+
+      #       docker manifest annotate "${registry}/my-smart-homes:${tag_l}" \
+      #         "${registry}/armv7-homeassistant:${tag_r}" \
+      #         --os linux --arch arm --variant=v7
+
+      #       docker manifest annotate "${registry}/my-smart-homes:${tag_l}" \
+      #         "${registry}/aarch64-homeassistant:${tag_r}" \
+      #         --os linux --arch arm64 --variant=v8
+
+      #       docker manifest push --purge "${registry}/my-smart-homes:${tag_l}"
+      #       cosign sign --yes "${registry}/my-smart-homes:${tag_l}"
+      #     }
+
+      #     function validate_image() {
+      #       local image=${1}
+      #       if ! cosign verify --certificate-oidc-issuer https://token.actions.githubusercontent.com --certificate-identity-regexp https://github.com/home-assistant/core/.* "${image}"; then
+      #         echo "Invalid signature!"
+      #         exit 1
+      #       fi
+      #     }
+
+      #     # function push_dockerhub() {
+      #     #   local image=${1}
+      #     #   local tag=${2}
+
+      #     #   docker tag "ghcr.io/home-assistant/${image}:${tag}" "docker.io/homeassistant/${image}:${tag}"
+      #     #   docker push "docker.io/homeassistant/${image}:${tag}"
+      #     #   cosign sign --yes "docker.io/homeassistant/${image}:${tag}"
+      #     # }
+
+      #     # Pull images from github container registry and verify signature
+      #     docker pull "ghcr.io/my-smart-homes/amd64-homeassistant:${{ needs.init.outputs.version }}"
+      #     docker pull "ghcr.io/my-smart-homes/i386-homeassistant:${{ needs.init.outputs.version }}"
+      #     docker pull "ghcr.io/my-smart-homes/armhf-homeassistant:${{ needs.init.outputs.version }}"
+      #     docker pull "ghcr.io/my-smart-homes/armv7-homeassistant:${{ needs.init.outputs.version }}"
+      #     docker pull "ghcr.io/my-smart-homes/aarch64-homeassistant:${{ needs.init.outputs.version }}"
+
+      #     validate_image "ghcr.io/my-smart-homes/amd64-homeassistant:${{ needs.init.outputs.version }}"
+      #     validate_image "ghcr.io/my-smart-homes/i386-homeassistant:${{ needs.init.outputs.version }}"
+      #     validate_image "ghcr.io/my-smart-homes/armhf-homeassistant:${{ needs.init.outputs.version }}"
+      #     validate_image "ghcr.io/my-smart-homes/armv7-homeassistant:${{ needs.init.outputs.version }}"
+      #     validate_image "ghcr.io/my-smart-homes/aarch64-homeassistant:${{ needs.init.outputs.version }}"
+
+      #     if [[ "${{ matrix.registry }}" ==  "docker.io/my-smart-homes" ]]; then
+      #       # Upload images to dockerhub
+      #       push_dockerhub "amd64-homeassistant" "${{ needs.init.outputs.version }}"
+      #       push_dockerhub "i386-homeassistant" "${{ needs.init.outputs.version }}"
+      #       push_dockerhub "armhf-homeassistant" "${{ needs.init.outputs.version }}"
+      #       push_dockerhub "armv7-homeassistant" "${{ needs.init.outputs.version }}"
+      #       push_dockerhub "aarch64-homeassistant" "${{ needs.init.outputs.version }}"
+      #     fi
+
+      #     # Create version tag
+      #     create_manifest "${{ needs.init.outputs.version }}" "${{ needs.init.outputs.version }}"
+
+      #     # Create general tags
+      #     if [[ "${{ needs.init.outputs.version }}" =~ d ]]; then
+      #       create_manifest "dev" "${{ needs.init.outputs.version }}"
+      #     elif [[ "${{ needs.init.outputs.version }}" =~ b ]]; then
+      #       create_manifest "beta" "${{ needs.init.outputs.version }}"
+      #       create_manifest "rc" "${{ needs.init.outputs.version }}"
+      #     else
+      #       create_manifest "stable" "${{ needs.init.outputs.version }}"
+      #       create_manifest "latest" "${{ needs.init.outputs.version }}"
+      #       create_manifest "beta" "${{ needs.init.outputs.version }}"
+      #       create_manifest "rc" "${{ needs.init.outputs.version }}"
+
+      #       # Create series version tag (e.g. 2021.6)
+      #       v="${{ needs.init.outputs.version }}"
+      #       create_manifest "${v%.*}" "${{ needs.init.outputs.version }}"
+      #     fi
 
   build_python:
     name: Build PyPi package
     environment: ${{ needs.init.outputs.channel }}
     needs: ["init", "build_base"]
     runs-on: ubuntu-latest
-    if: github.repository_owner == 'home-assistant' && needs.init.outputs.publish == 'true'
+    if: needs.init.outputs.publish == 'true'
     steps:
       - name: Checkout the repository
-        uses: actions/checkout@v4.2.2
+        uses: actions/checkout@v4.2.0
 
       - name: Set up Python ${{ env.DEFAULT_PYTHON }}
-        uses: actions/setup-python@v5.3.0
+        uses: actions/setup-python@v5.2.0
         with:
           python-version: ${{ env.DEFAULT_PYTHON }}
 
@@ -484,55 +483,55 @@ jobs:
 
           twine upload dist/* --skip-existing
 
-  hassfest-image:
-    name: Build and test hassfest image
-    runs-on: ubuntu-latest
-    permissions:
-      contents: read
-      packages: write
-      attestations: write
-      id-token: write
-    needs: ["init"]
-    if: github.repository_owner == 'home-assistant'
-    env:
-      HASSFEST_IMAGE_NAME: ghcr.io/home-assistant/hassfest
-      HASSFEST_IMAGE_TAG: ghcr.io/home-assistant/hassfest:${{ needs.init.outputs.version }}
-    steps:
-      - name: Checkout repository
-        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
-
-      - name: Login to GitHub Container Registry
-        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
-        with:
-          registry: ghcr.io
-          username: ${{ github.repository_owner }}
-          password: ${{ secrets.GITHUB_TOKEN }}
-
-      - name: Build Docker image
-        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
-        with:
-          context: . # So action will not pull the repository again
-          file: ./script/hassfest/docker/Dockerfile
-          load: true
-          tags: ${{ env.HASSFEST_IMAGE_TAG }}
-
-      - name: Run hassfest against core
-        run: docker run --rm -v ${{ github.workspace }}/homeassistant:/github/workspace/homeassistant ${{ env.HASSFEST_IMAGE_TAG }} --core-integrations-path=/github/workspace/homeassistant/components
-
-      - name: Push Docker image
-        if: needs.init.outputs.channel != 'dev' && needs.init.outputs.publish == 'true'
-        id: push
-        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
-        with:
-          context: . # So action will not pull the repository again
-          file: ./script/hassfest/docker/Dockerfile
-          push: true
-          tags: ${{ env.HASSFEST_IMAGE_TAG }},${{ env.HASSFEST_IMAGE_NAME }}:latest
-
-      - name: Generate artifact attestation
-        if: needs.init.outputs.channel != 'dev' && needs.init.outputs.publish == 'true'
-        uses: actions/attest-build-provenance@1c608d11d69870c2092266b3f9a6f3abbf17002c # v1.4.3
-        with:
-          subject-name: ${{ env.HASSFEST_IMAGE_NAME }}
-          subject-digest: ${{ steps.push.outputs.digest }}
-          push-to-registry: true
+  # hassfest-image:
+  #   name: Build and test hassfest image
+  #   runs-on: ubuntu-latest
+  #   permissions:
+  #     contents: read
+  #     packages: write
+  #     attestations: write
+  #     id-token: write
+  #   needs: ["init"]
+  #   # if: github.repository_owner == 'home-assistant'
+  #   env:
+  #     HASSFEST_IMAGE_NAME: ghcr.io/home-assistant/hassfest
+  #     HASSFEST_IMAGE_TAG: ghcr.io/home-assistant/hassfest:${{ needs.init.outputs.version }}
+  #   steps:
+  #     - name: Checkout repository
+  #       uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
+
+  #     - name: Login to GitHub Container Registry
+  #       uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
+  #       with:
+  #         registry: ghcr.io
+  #         username: ${{ github.repository_owner }}
+  #         password: ${{ secrets.GITHUB_TOKEN }}
+
+  #     - name: Build Docker image
+  #       uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
+  #       with:
+  #         context: . # So action will not pull the repository again
+  #         file: ./script/hassfest/docker/Dockerfile
+  #         load: true
+  #         tags: ${{ env.HASSFEST_IMAGE_TAG }}
+
+  #     - name: Run hassfest against core
+  #       run: docker run --rm -v ${{ github.workspace }}/homeassistant:/github/workspace/homeassistant ${{ env.HASSFEST_IMAGE_TAG }} --core-integrations-path=/github/workspace/homeassistant/components
+
+  #     - name: Push Docker image
+  #       if: needs.init.outputs.channel != 'dev' && needs.init.outputs.publish == 'true'
+  #       id: push
+  #       uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
+  #       with:
+  #         context: . # So action will not pull the repository again
+  #         file: ./script/hassfest/docker/Dockerfile
+  #         push: true
+  #         tags: ${{ env.HASSFEST_IMAGE_TAG }},${{ env.HASSFEST_IMAGE_NAME }}:latest
+
+  #     - name: Generate artifact attestation
+  #       if: needs.init.outputs.channel != 'dev' && needs.init.outputs.publish == 'true'
+  #       uses: actions/attest-build-provenance@1c608d11d69870c2092266b3f9a6f3abbf17002c # v1.4.3
+  #       with:
+  #         subject-name: ${{ env.HASSFEST_IMAGE_NAME }}
+  #         subject-digest: ${{ steps.push.outputs.digest }}
+  #         push-to-registry: true
diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index a619936cbb..ff8e4540f9 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -17,18 +17,6 @@ repos:
           - --quiet-level=2
         exclude_types: [csv, json, html]
         exclude: ^tests/fixtures/|homeassistant/generated/|tests/components/.*/snapshots/
-  - repo: https://github.com/pre-commit/pre-commit-hooks
-    rev: v4.4.0
-    hooks:
-      - id: check-executables-have-shebangs
-        stages: [manual]
-      - id: check-json
-        exclude: (.vscode|.devcontainer)
-      - id: no-commit-to-branch
-        args:
-          - --branch=dev
-          - --branch=master
-          - --branch=rc
   - repo: https://github.com/adrienverge/yamllint.git
     rev: v1.35.1
     hooks:
@@ -77,24 +65,3 @@ repos:
         language: script
         types: [text]
         files: ^(homeassistant/.+/manifest\.json|homeassistant/brands/.+\.json|pyproject\.toml|\.pre-commit-config\.yaml|script/gen_requirements_all\.py)$
-      - id: hassfest
-        name: hassfest
-        entry: script/run-in-env.sh python3 -m script.hassfest
-        pass_filenames: false
-        language: script
-        types: [text]
-        files: ^(homeassistant/.+/(icons|manifest|strings)\.json|homeassistant/brands/.*\.json|homeassistant/.+/services\.yaml|script/hassfest/(?!metadata|mypy_config).+\.py|requirements.+\.txt)$
-      - id: hassfest-metadata
-        name: hassfest-metadata
-        entry: script/run-in-env.sh python3 -m script.hassfest -p metadata,docker
-        pass_filenames: false
-        language: script
-        types: [text]
-        files: ^(script/hassfest/metadata\.py|homeassistant/const\.py$|pyproject\.toml)$
-      - id: hassfest-mypy-config
-        name: hassfest-mypy-config
-        entry: script/run-in-env.sh python3 -m script.hassfest -p mypy_config
-        pass_filenames: false
-        language: script
-        types: [text]
-        files: ^(script/hassfest/mypy_config\.py|\.strict-typing|mypy\.ini)$
diff --git a/homeassistant/components/frontend/__init__.py b/homeassistant/components/frontend/__init__.py
index c1098ac19d..f2f19c8328 100644
--- a/homeassistant/components/frontend/__init__.py
+++ b/homeassistant/components/frontend/__init__.py
@@ -815,8 +815,8 @@ async def websocket_get_version(
     frontend = None
 
     for req in integration.requirements:
-        if req.startswith("home-assistant-frontend=="):
-            frontend = req.removeprefix("home-assistant-frontend==")
+        if req.startswith("my-smart-homes-frontend=="):
+            frontend = req.removeprefix("my-smart-homes-frontend==")
 
     if frontend is None:
         connection.send_error(msg["id"], "unknown_version", "Version not found")
diff --git a/pyproject.toml b/pyproject.toml
index a1f842748c..087744628f 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -3,7 +3,7 @@ requires = ["setuptools==75.1.0"]
 build-backend = "setuptools.build_meta"
 
 [project]
-name        = "homeassistant"
+name        = "my-smart-homes"
 version     = "2024.11.0.dev0"
 license     = {text = "Apache-2.0"}
 description = "Open-source home automation platform running on Python 3."
